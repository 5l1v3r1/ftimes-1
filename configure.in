########################################################################
#
# $Id: configure.in,v 1.6 2002/09/20 17:46:02 mavrik Exp $
#
########################################################################

dnl ####################################################################
dnl #
dnl # Initialize.
dnl #
dnl ####################################################################

AC_INIT(src/ftimes.c)
AC_CONFIG_HEADER(src/config.h)
AC_PREFIX_DEFAULT(/usr/local/integrity)
cgidir='${exec_prefix}/cgi'
docdir='${exec_prefix}/doc'
etcdir='${exec_prefix}/etc'
logdir='${exec_prefix}/log'
mandir='${exec_prefix}/man'
rundir='${exec_prefix}/run'
AC_SUBST(cgidir)
AC_SUBST(docdir)
AC_SUBST(etcdir)
AC_SUBST(logdir)
AC_SUBST(mandir)
AC_SUBST(rundir)

AC_CANONICAL_SYSTEM
case "$target_os" in
*aix*)
        AC_DEFINE(FTimes_UNIX)
        AC_DEFINE(FTimes_AIX)
        AC_DEFINE(USE_AP_SNPRINTF)
        ap_srcs=ap_snprintf.c
        ap_incs=ap_snprintf.h
        extension=
        AC_SUBST(ap_srcs)
        AC_SUBST(ap_incs)
        AC_SUBST(extension)
        ;;
*bsd*)
        AC_DEFINE(FTimes_UNIX)
        AC_DEFINE(FTimes_BSD)
        extension=
        AC_SUBST(extension)
        ;;
*darwin*)
        AC_DEFINE(FTimes_UNIX)
        AC_DEFINE(FTimes_MACOS)
        extension=
        AC_SUBST(extension)
        ;;
*linux*)
        AC_DEFINE(FTimes_UNIX)
        AC_DEFINE(FTimes_LINUX)
        extension=
        AC_SUBST(extension)
        ;;
*solaris*)
        AC_DEFINE(FTimes_UNIX)
        AC_DEFINE(FTimes_SOLARIS)
        AC_DEFINE(USE_AP_SNPRINTF)
        ap_srcs=ap_snprintf.c
        ap_incs=ap_snprintf.h
        extension=
        AC_SUBST(ap_srcs)
        AC_SUBST(ap_incs)
        AC_SUBST(extension)
        ;;
*)
        echo
        echo "The target operating system, $target_os, is not currently supported."
        echo
        exit
        ;;
esac

case $host_cpu in
alpha*)
        AC_DEFINE(K_CPU_ALPHA)
	;;
i?86*)
        AC_DEFINE(K_CPU_I386)
	;;
powerpc*)
        AC_DEFINE(K_CPU_POWERPC)
	;;
sparc*)
        AC_DEFINE(K_CPU_SPARC)
	;;
*)
        echo
        echo "The target cpu, $host_cpu, is not currently supported."
        echo
        exit
        ;;
esac

dnl ####################################################################
dnl #
dnl # Check for programs.
dnl #
dnl ####################################################################

AC_PROG_CC
if test "$GCC" = "yes"; then CFLAGS="$CFLAGS -Wall"; fi
AC_PROG_INSTALL
AC_PROG_MAKE_SET

dnl ####################################################################
dnl #
dnl # Check for libraries.
dnl #
dnl ####################################################################

AC_CHECK_LIB(nsl, gethostbyname)
AC_CHECK_LIB(socket, socket)

dnl ####################################################################
dnl #
dnl # Check for header files.
dnl #
dnl ####################################################################

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h sys/time.h unistd.h unistd.h sys/select.h)

dnl ####################################################################
dnl #
dnl # Check for typedefs, structures, and compiler characteristics.
dnl #
dnl ####################################################################

AC_C_CONST
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_TYPE_UID_T

dnl ####################################################################
dnl #
dnl # Check for library functions.
dnl #
dnl ####################################################################

AC_FUNC_MEMCMP
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(gettimeofday socket strerror strstr uname snprintf vsnprintf)

dnl ####################################################################
dnl #
dnl # Check for OpenSSL.
dnl #
dnl ####################################################################

LocateOpenSSLDirectory()
{
  if test -f "$1/include/openssl/ssl.h"; then
    ssldir="$1"
    return 0
  fi
  return 1
}

AC_MSG_CHECKING([for OpenSSL support])
AC_ARG_WITH(ssl,
  [  --with-ssl=DIR          Specify alternate OpenSSL location
  --without-ssl           Disable OpenSSL support (same as --with-ssl=no)],
  [
    dnl ################################################################
    dnl #
    dnl # Check the specified localtion only.
    dnl #
    dnl ################################################################
    case `echo $withval | tr "A-Z" "a-z"` in
    no)
      use_ssl=0
      ;;
    *)
      use_ssl=1
      LocateOpenSSLDirectory "$withval"
      ;;
    esac
  ],
  [
    dnl ################################################################
    dnl #
    dnl # Search common OpenSSL locations.
    dnl #
    dnl ################################################################
    use_ssl=1
    for basedir in /usr /usr/local /usr/pkg /opt; do
      for dir in $basedir $basedir/openssl $basedir/ssl; do
        LocateOpenSSLDirectory $dir && break 2
      done
    done
  ]
)
if test $use_ssl -ne 0; then
  AC_DEFINE(USE_SSL)
  if test -z "$ssldir"; then
    AC_MSG_RESULT(missing)
    echo
    echo "Unable to locate OpenSSL. Use --with-ssl=DIR to specify a location."
    echo
    exit 1
  else
    AC_MSG_RESULT($ssldir)
    ssl_srcs=ssl.c
    ssl_incs="ssl.h ssl-pool.h"
    sslincflags="-I$ssldir/include"
    ssllibflags="-L$ssldir/lib -lssl -lcrypto"
    AC_SUBST(ssl_srcs)
    AC_SUBST(ssl_incs)
    AC_SUBST(sslincflags)
    AC_SUBST(ssllibflags)
  fi
else
  AC_MSG_RESULT(check explicitly disabled)
fi

dnl ####################################################################
dnl #
dnl # Check whether or not to include XMagic.
dnl #
dnl ####################################################################

AC_MSG_CHECKING(whether to include XMagic support)
AC_ARG_ENABLE(xmagic,
  [  --enable-xmagic         Enable XMagic support ],
  [ AC_MSG_RESULT(yes)
    AC_DEFINE(USE_XMAGIC)
    xmagic_srcs=xmagic.c
    xmagic_incs=xmagic.h
    AC_SUBST(xmagic_srcs)
    AC_SUBST(xmagic_incs) ],
  [ AC_MSG_RESULT(no) ]
)

dnl ####################################################################
dnl #
dnl # Check whether or not to enable block/character device includes.
dnl #
dnl ####################################################################

AC_MSG_CHECKING(whether to enable block/character device includes)
AC_ARG_ENABLE(devices,
  [  --enable-devices        Enable block/character device includes ],
  [ AC_MSG_RESULT(yes)
    AC_DEFINE(ENABLE_BLK_CHR_DEVICE_INCLUDES) ],
  [ AC_MSG_RESULT(no) ]
)

dnl ####################################################################
dnl #
dnl # Create Makefiles.
dnl #
dnl ####################################################################

AC_OUTPUT(Makefile cgi/Makefile doc/Makefile etc/Makefile src/Makefile)
