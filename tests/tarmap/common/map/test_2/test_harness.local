#!/usr/bin/perl -w
######################################################################
#
# $Id: test_harness.local,v 1.6 2010/01/22 02:56:44 mavrik Exp $
#
######################################################################

use strict;

######################################################################
#
# GetTestNumber
#
######################################################################

sub GetTestNumber
{
  return "2";
}


######################################################################
#
# This hash controls the order in which tests are performed.
#
######################################################################

  my $phTestNumbers = GetTestNumbers();

  %$phTestNumbers =
  (
    1 => "file_1",
  );


######################################################################
#
# This hash holds test descriptions.
#
######################################################################

  my $phTestDescriptions = GetTestDescriptions();

  %$phTestDescriptions =
  (
    'file_1' => "tests a tar ball consisting of one file whose name is exactly 100 bytes",
  );


######################################################################
#
# This hash holds various test properties.
#
######################################################################

  my $phTestProperties = GetTestProperties();


######################################################################
#
# TestGroup_file_1
#
######################################################################

sub Hitch_file_1
{
  1;
}


sub Check_file_1
{
  my ($phProperties) = @_;

  my ($sFile, $sName) = MakeTestName($phProperties);

  ##################################################################
  #
  # For MinGW on WINX platforms, the redirection (i.e., '2>&1')
  # causes the following error when UNIX path separators are used:
  #
  #   '..' is not recognized as an internal or external command,
  #   operable program or batch file.
  #
  # To prevent this, the path separators must be switched.
  #
  ##################################################################

  my $sCommand = "$$phProperties{'TargetProgram'} --map --file $sFile 2>&1";
  if ($$phProperties{'OsClass'} eq "WINDOWS")
  {
    $sCommand =~ s,/,\\,g;
  }
  DebugPrint(3, "Command=$sCommand");

  if (!open(PH, "$sCommand |"))
  {
    return "fail";
  }
  binmode(PH);
  my @aLines = <PH>;
  close(PH);

  DebugPrint(4, "TargetLineCount=2");
  if (scalar(@aLines) != 2)
  {
    DebugPrint(4, "ActualLineCount=" . scalar(@aLines));
    return "fail";
  }
  $aLines[1] =~ s/[\r\n]*$//;

  my $sTargetOutputRegExp = qq("file_1_____________________________________________________________________________________________X"[|]100[0-7]{3}[|]\\d+[|]\\d+[|]100[|]40ad76b0c260c7d51d6ea7ee4bd075a4[|]dee0abfa2f54b01aea54907e03232325a5a628d2);
  DebugPrint(4, "TargetOutputRegExp=$sTargetOutputRegExp");
  if ($aLines[1] !~ /^$sTargetOutputRegExp$/)
  {
    DebugPrint(4, "ActualOutput=$aLines[1]");
    return "fail";
  }

  return "pass";
}


sub Clean_file_1
{
  my ($phProperties) = @_;

  my ($sFile, $sName) = MakeTestName($phProperties);

  if (-f $sFile && !unlink($sFile))
  {
    return "fail";
  }

  return "pass";
}


sub Setup_file_1
{
  my ($phProperties) = @_;

  my ($sFile, $sName) = MakeTestName($phProperties);

  if (!open(FH, "> $sFile"))
  {
    return "fail";
  }
  binmode(FH);

  foreach my $sEncodedLine (split(/\n/, <<'EOF'))
begin 644 file_1.tar
M9FEL95\Q7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?
M7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?7U]?
M7U]?7U]?7U]?6#`P,#8T-"``,#`P,30T(``P,#`Q-#0@`#`P,#`P,#`P,30T
M(#$P-S4Q-S4S,C`P(#`S-#,P-@`@,```````````````````````````````
M````````````````````````````````````````````````````````````
M``````````````````````````````````````````!U<W1A<@`P,&UA=G)I
M:P``````````````````````````````````;6%V<FEK````````````````
M```````````````````P,#`P,#`@`#`P,#`P,"``````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M``````````````````````!!04%!04%!04%!04%!04%!04%!04%!04%!04%!
M04%!04%!04%!04%!04%!04%!04%!04%!04%!04%!04%!04%!04%!04%!04%!
M04%!04%!04%!04%!04%!04%!04%!04%!04$*````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
M````````````````````````````````````````````````````````````
7````````````````````````````````
`
end
EOF
{
   next if ($sEncodedLine =~ /^begin/);
   last if ($sEncodedLine =~ /^end/);
   my $sLine = unpack("u", $sEncodedLine);
   print FH $sLine if (defined($sLine));
}

  return "pass";
}

1;
